// Code generated by protoc-gen-go. DO NOT EDIT.
// source: week5/server-streaming.proto

package week5

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SSRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSRequest) Reset()         { *m = SSRequest{} }
func (m *SSRequest) String() string { return proto.CompactTextString(m) }
func (*SSRequest) ProtoMessage()    {}
func (*SSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72892e500143292b, []int{0}
}

func (m *SSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSRequest.Unmarshal(m, b)
}
func (m *SSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSRequest.Marshal(b, m, deterministic)
}
func (m *SSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSRequest.Merge(m, src)
}
func (m *SSRequest) XXX_Size() int {
	return xxx_messageInfo_SSRequest.Size(m)
}
func (m *SSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SSRequest proto.InternalMessageInfo

func (m *SSRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type SSResponse struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSResponse) Reset()         { *m = SSResponse{} }
func (m *SSResponse) String() string { return proto.CompactTextString(m) }
func (*SSResponse) ProtoMessage()    {}
func (*SSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72892e500143292b, []int{1}
}

func (m *SSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSResponse.Unmarshal(m, b)
}
func (m *SSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSResponse.Marshal(b, m, deterministic)
}
func (m *SSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSResponse.Merge(m, src)
}
func (m *SSResponse) XXX_Size() int {
	return xxx_messageInfo_SSResponse.Size(m)
}
func (m *SSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SSResponse proto.InternalMessageInfo

func (m *SSResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*SSRequest)(nil), "week5.SSRequest")
	proto.RegisterType((*SSResponse)(nil), "week5.SSResponse")
}

func init() { proto.RegisterFile("week5/server-streaming.proto", fileDescriptor_72892e500143292b) }

var fileDescriptor_72892e500143292b = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x4f, 0x4d, 0xcd,
	0x36, 0xd5, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2d, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xcd,
	0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0xcb, 0x2a, 0xc9, 0x73, 0x71,
	0x06, 0x07, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0x94, 0xa4, 0x56,
	0x94, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a, 0x2a, 0x5c, 0x5c, 0x20, 0x05,
	0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x62, 0x5c, 0x6c, 0xf9, 0xa5, 0x25, 0x05, 0xa5, 0x30,
	0x35, 0x50, 0x9e, 0x91, 0x1d, 0xc8, 0x98, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x43,
	0x2e, 0xb6, 0xe0, 0x60, 0xb7, 0xd2, 0xbc, 0x64, 0x21, 0x01, 0x3d, 0xb0, 0x2d, 0x7a, 0x70, 0x2b,
	0xa4, 0x04, 0x91, 0x44, 0x20, 0x66, 0x2a, 0x31, 0x18, 0x30, 0x3a, 0xb1, 0x47, 0x41, 0xdc, 0x93,
	0xc4, 0x06, 0x76, 0x9d, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x64, 0xa2, 0xf2, 0xbd, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SSServiceClient is the client API for SSService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SSServiceClient interface {
	SSFunc(ctx context.Context, in *SSRequest, opts ...grpc.CallOption) (SSService_SSFuncClient, error)
}

type sSServiceClient struct {
	cc *grpc.ClientConn
}

func NewSSServiceClient(cc *grpc.ClientConn) SSServiceClient {
	return &sSServiceClient{cc}
}

func (c *sSServiceClient) SSFunc(ctx context.Context, in *SSRequest, opts ...grpc.CallOption) (SSService_SSFuncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SSService_serviceDesc.Streams[0], "/week5.SSService/SSFunc", opts...)
	if err != nil {
		return nil, err
	}
	x := &sSServiceSSFuncClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SSService_SSFuncClient interface {
	Recv() (*SSResponse, error)
	grpc.ClientStream
}

type sSServiceSSFuncClient struct {
	grpc.ClientStream
}

func (x *sSServiceSSFuncClient) Recv() (*SSResponse, error) {
	m := new(SSResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SSServiceServer is the server API for SSService service.
type SSServiceServer interface {
	SSFunc(*SSRequest, SSService_SSFuncServer) error
}

// UnimplementedSSServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSSServiceServer struct {
}

func (*UnimplementedSSServiceServer) SSFunc(req *SSRequest, srv SSService_SSFuncServer) error {
	return status.Errorf(codes.Unimplemented, "method SSFunc not implemented")
}

func RegisterSSServiceServer(s *grpc.Server, srv SSServiceServer) {
	s.RegisterService(&_SSService_serviceDesc, srv)
}

func _SSService_SSFunc_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SSRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SSServiceServer).SSFunc(m, &sSServiceSSFuncServer{stream})
}

type SSService_SSFuncServer interface {
	Send(*SSResponse) error
	grpc.ServerStream
}

type sSServiceSSFuncServer struct {
	grpc.ServerStream
}

func (x *sSServiceSSFuncServer) Send(m *SSResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "week5.SSService",
	HandlerType: (*SSServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SSFunc",
			Handler:       _SSService_SSFunc_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "week5/server-streaming.proto",
}
